(()=>{"use strict";function _defineProperty(e,t,r){return(t=function _toPropertyKey(e){var t=function _toPrimitive(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class GeoTrace{constructor(){_defineProperty(this,"fetchError",!1)}async getLocationCode(){let e=GeoTrace.getFromStorage();if(e)return e;try{let t=await GeoTrace.fetchCloudflareCgiTrace(),r=await t.text();e=this.extractFromTraceEndpoint(r,"loc"),GeoTrace.saveToStorage(e)}catch(e){this.fetchError=!0}return e}async getIpAddress(){let e;try{let t=await GeoTrace.fetchCloudflareCgiTrace(),r=await t.text();e=this.extractFromTraceEndpoint(r,"ip")}catch(e){this.fetchError=!0}return e}extractFromTraceEndpoint(e,t){let r;if(!e)throw"responseEmpty";return r=e.split(t+"=")[1].split("\n")[0],r}static async fetchCloudflareCgiTrace(){const e=new AbortController,t=setTimeout((()=>e.abort()),GeoTrace.fetchTimeout),r=await fetch(GeoTrace.traceEndpoint,{mode:"cors"});return clearTimeout(t),r}static saveToStorage(e){GeoTrace.isLocalStorageOn()&&window.localStorage.setItem(GeoTrace.storageKey,JSON.stringify(e))}static getFromStorage(){return!!GeoTrace.isLocalStorageOn()&&JSON.parse(window.localStorage.getItem(GeoTrace.storageKey))}static isLocalStorageOn(){return void 0!==window.localStorage}}_defineProperty(GeoTrace,"traceEndpoint","https://elementor.com/cdn-cgi/trace"),_defineProperty(GeoTrace,"fetchTimeout",3e3),_defineProperty(GeoTrace,"storageKey","elGeoLocationCode");class NewsletterEnrollment extends elementorModules.frontend.handlers.Base{onInit(){document.addEventListener("strattic-form-submit",(e=>{e.detail.form.id.includes("elementor_newsletter_subscribe")&&this.publishEvent(e.detail.form)}))}async publishEvent(e){const t=e.id.replace("elementor_newsletter_subscribe","form-field-email"),r=document.getElementById(t).value;if(!r)return;const o=this.getElementSettings("additional_attributes"),n=await(new GeoTrace).getIpAddress(),a={email:r,source:document.referrer,context:e.name??"",enroll_date:this.getUnixTimestamp(),attributes:this.getAttributes(o),ip:n};(await this.subscribe(a)).success}async subscribe(e){return await fetch(window.newsletterEnrollmentData?.cfWorkerUrl,{method:"POST",timeout:5,body:JSON.stringify(e)})}getUnixTimestamp(){return Math.floor(Date.now()/1e3)}getAttributes(e){const t={};for(let r of e)t[r.attr_key]=r.attr_value;return t}}window.addEventListener("elementor/frontend/init",(()=>{elementorFrontend.hooks.addAction("frontend/element_ready/form.default",(e=>{elementorFrontend.elementsHandler.addHandler(NewsletterEnrollment,{$element:e})}))}))})();
//# sourceMappingURL=newsletter-enrollment.min.js.map